{
  "mappings": {
    "properties": {
      "eid": { "type": "keyword" },
      "ets": { "type": "long" },
      "ver": { "type": "keyword" },
      "mid": { "type": "keyword" },
      "actor": {
        "properties": {
          "id": { "type": "keyword" },
          "type": { "type": "keyword" }
        }
      },
      "context": {
        "properties": {
          "channel": { "type": "keyword" },
          "pdata": {
            "properties": {
              "id": { "type": "keyword" },
              "pid": { "type": "keyword" },
              "ver": { "type": "keyword" }
            }
          },
          "env": { "type": "keyword" }
        }
      },
      "edata": {
        "properties": {
          "level": { "type": "keyword" },
          "type": { "type": "keyword" },
          "message": { "type": "text" },
          "params": {
            "type": "nested",
            "properties": {
              "duration": { "type": "long" },
              "protocol": { "type": "keyword" },
              "size": { "type": "long" },
              "method": { "type": "keyword" },
              "uip": { "type": "ip" },
              "url": { "type": "keyword" },
              "status": { "type": "integer" }
            }
          }
        }
      },
      "syncts": { "type": "long" }
    }
  }
}



// Explanation of the mapping:

// - eid, ver, mid, actor, context, and edata are defined as nested fields within the properties section.
//- For fields like eid, ver, and mid, the keyword type is used to enable exact matching and sorting.
//- ets and syncts are defined as long type for storing epoch timestamps.
//- For IP addresses, uip is defined as the ip type.
//- params field under edata is defined as a nested field to support structured querying on the nested object.
//- Text fields like message are defined as text type to enable full-text search.